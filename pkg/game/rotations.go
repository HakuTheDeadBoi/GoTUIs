package game

// position of top left corner of the tetromino
// row, col
var defaultPositions [7][2]int = [7][2]int{
	{-1, 3},
	{-1, 3},
	{-1, 3},
	{-1, 3},
	{-1, 3},
	{-1, 4},
	{-2, 3},
}

// J L S Z T O I
// r1 c1 r2 c2 r3 c3 r4 c4
var rotations [7][4][8]int = [7][4][8]int{
	{ // J shape
		{1, 0, 1, 1, 1, 2, 2, 2},
		{0, 1, 1, 1, 2, 0, 2, 1},
		{0, 0, 1, 0, 1, 1, 1, 2},
		{0, 1, 0, 2, 1, 1, 2, 1},
	},
	{ // L shape
		{1, 0, 1, 1, 1, 2, 2, 0},
		{0, 0, 0, 1, 1, 1, 2, 1},
		{1, 0, 1, 1, 1, 2, 0, 2},
		{0, 1, 1, 2, 2, 1, 2, 2},
	},
	{ // S shape
		{2, 0, 2, 1, 1, 1, 1, 2},
		{0, 0, 1, 0, 1, 1, 1, 2},
		{2, 0, 2, 1, 1, 1, 1, 2},
		{0, 0, 1, 0, 1, 1, 1, 2},
	},
	{ // Z shape
		{1, 0, 1, 1, 2, 1, 2, 2},
		{0, 1, 1, 0, 1, 1, 2, 0},
		{1, 0, 1, 1, 2, 1, 2, 2},
		{0, 1, 1, 0, 1, 1, 2, 0},
	},
	{ // T shape
		{1, 0, 1, 1, 1, 2, 2, 1},
		{0, 1, 1, 0, 1, 1, 2, 1},
		{0, 1, 1, 0, 1, 1, 1, 2},
		{0, 1, 1, 1, 1, 2, 2, 1},
	},
	{ // O shape
		{1, 1, 1, 2, 2, 1, 2, 2},
		{1, 1, 1, 2, 2, 1, 2, 2},
		{1, 1, 1, 2, 2, 1, 2, 2},
		{1, 1, 1, 2, 2, 1, 2, 2},
	},
	{
		{2, 0, 2, 1, 2, 2, 2, 3},
		{0, 1, 1, 1, 2, 1, 3, 1},
		{2, 0, 2, 1, 2, 2, 2, 3},
		{0, 1, 1, 1, 2, 1, 3, 1},
	},
}

func GetRotationBlocks(shape int, rotation int) *[8]int {
	return &rotations[shape][rotation]
}

func GetDefaultPosition(shape int) *[2]int {
	return &defaultPositions[shape]
}
